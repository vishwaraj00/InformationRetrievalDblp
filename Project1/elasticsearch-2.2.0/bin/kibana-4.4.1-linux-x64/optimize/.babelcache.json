{
  "{\"filename\":\"/home/vishwarajanand/Desktop/DblpDataset/elasticsearch-2.2.0/plugins/kibana-4.4.1-linux-x64/installedPlugins/sense/index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = function (kibana) {\n  var _require = require('path');\n\n  var resolve = _require.resolve;\n  var join = _require.join;\n  var sep = _require.sep;\n\n  var Joi = require('joi');\n  var Boom = require('boom');\n  var modules = resolve(__dirname, 'public/webpackShims/');\n  var src = resolve(__dirname, 'public/src/');\n\n  var _require2 = require('fs');\n\n  var existsSync = _require2.existsSync;\n\n  var _require3 = require('lodash');\n\n  var startsWith = _require3.startsWith;\n  var endsWith = _require3.endsWith;\n\n  var apps = [{\n    title: 'Sense',\n    description: 'JSON aware developer\\'s interface to ElasticSearch',\n    icon: 'plugins/sense/bonsai.png',\n    main: 'plugins/sense/sense',\n    autoload: kibana.autoload.styles,\n    injectVars: function injectVars(server, options) {\n      return options;\n    }\n  }];\n\n  if (existsSync(resolve(__dirname, 'public/tests'))) {\n    apps.push({\n      title: 'Sense Tests',\n      id: 'sense-tests',\n      main: 'plugins/sense/tests',\n      hidden: true\n      //listed: false // uncomment after https://github.com/elastic/kibana/pull/4755\n    });\n  }\n\n  return new kibana.Plugin({\n    id: 'sense',\n\n    config: function config(Joi) {\n      return Joi.object({\n        enabled: Joi.boolean()['default'](true),\n        defaultServerUrl: Joi.string()['default']('http://localhost:9200'),\n        proxyFilter: Joi.array().items(Joi.string()).single()['default'](['.*']),\n        ssl: Joi.object({\n          verify: Joi.boolean()['default'](true)\n        })['default']()\n      })['default']();\n    },\n\n    init: function init(server, options) {\n      var filters = options.proxyFilter.map(function (str) {\n        return new RegExp(str);\n      });\n\n      // http://hapijs.com/api/8.8.1#route-configuration\n      server.route({\n        path: '/api/sense/proxy',\n        method: ['*', 'GET'],\n        config: {\n          handler: {\n            proxy: {\n              mapUri: function mapUri(req, cb) {\n                var uri = req.query.uri;\n\n                if (!uri) {\n                  cb(Boom.badRequest('URI is a required param.'));\n                  return;\n                }\n\n                if (!filters.some(function (re) {\n                  return re.test(uri);\n                })) {\n                  var err = Boom.forbidden();\n                  err.output.payload = \"Error connecting to '\" + uri + \"':\\n\\nUnable to send requests to that url.\";\n                  err.output.headers['content-type'] = 'text/plain';\n                  cb(err);\n                  return;\n                }\n\n                cb(null, uri);\n              },\n              rejectUnauthorized: options.ssl.verify,\n              passThrough: true,\n              xforward: true,\n              onResponse: function onResponse(err, res, request, reply, settings, ttl) {\n                if (err != null) {\n                  reply(\"Error connecting to '\" + request.query.uri + \"':\\n\\n\" + err.message).type(\"text/plain\").statusCode = 502;\n                } else {\n                  reply(null, res);\n                }\n              }\n            }\n          }\n        }\n      });\n\n      server.route({\n        path: '/api/sense/api_server',\n        method: ['GET', 'POST'],\n        handler: function handler(req, reply) {\n          var server = require('./api_server/server');\n          var _req$query = req.query;\n          var sense_version = _req$query.sense_version;\n          var apis = _req$query.apis;\n\n          if (!apis) {\n            reply(Boom.badRequest('\"apis\" is a required param.'));\n            return;\n          }\n\n          return server.resolveApi(sense_version, apis.split(\",\"), reply);\n        }\n      });\n\n      var testApp = kibana.uiExports.apps.hidden.byId['sense-tests'];\n      if (testApp) {\n        server.route({\n          path: '/app/sense-tests',\n          method: 'GET',\n          handler: function handler(req, reply) {\n            return reply.renderApp(testApp);\n          }\n        });\n      }\n    },\n\n    uiExports: {\n      apps: apps,\n\n      noParse: [join(modules, 'ace' + sep), join(modules, 'moment_src/moment' + sep), join(src, 'sense_editor/mode/worker.js')]\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/vishwarajanand/Desktop/DblpDataset/elasticsearch-2.2.0/plugins/kibana-4.4.1-linux-x64/installedPlugins/sense/index.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/vishwarajanand/Desktop/DblpDataset/elasticsearch-2.2.0/plugins/kibana-4.4.1-linux-x64/installedPlugins/sense/index.js",
      "sourcesContent": [
        "module.exports = function (kibana) {\n  let { resolve, join, sep } = require('path');\n  let Joi = require('joi');\n  let Boom = require('boom');\n  let modules = resolve(__dirname, 'public/webpackShims/');\n  let src = resolve(__dirname, 'public/src/');\n  let { existsSync } = require('fs');\n  const { startsWith, endsWith } = require('lodash');\n\n  const apps = [\n    {\n      title: 'Sense',\n      description: 'JSON aware developer\\'s interface to ElasticSearch',\n      icon: 'plugins/sense/bonsai.png',\n      main: 'plugins/sense/sense',\n      autoload: kibana.autoload.styles,\n      injectVars: function (server, options) {\n        return options;\n      }\n    }\n  ];\n\n  if (existsSync(resolve(__dirname, 'public/tests'))) {\n    apps.push({\n      title: 'Sense Tests',\n      id: 'sense-tests',\n      main: 'plugins/sense/tests',\n      hidden: true\n      //listed: false // uncomment after https://github.com/elastic/kibana/pull/4755\n    });\n  }\n\n  return new kibana.Plugin({\n    id: 'sense',\n\n    config: function (Joi) {\n      return Joi.object({\n        enabled: Joi.boolean().default(true),\n        defaultServerUrl: Joi.string().default('http://localhost:9200'),\n        proxyFilter: Joi.array().items(Joi.string()).single().default(['.*']),\n        ssl: Joi.object({\n          verify: Joi.boolean().default(true),\n        }).default(),\n      }).default();\n    },\n\n    init: function (server, options) {\n      const filters = options.proxyFilter.map(str => new RegExp(str));\n\n      // http://hapijs.com/api/8.8.1#route-configuration\n      server.route({\n        path: '/api/sense/proxy',\n        method: ['*', 'GET'],\n        config: {\n          handler: {\n            proxy: {\n              mapUri: function (req, cb) {\n                let { uri } = req.query;\n                if (!uri) {\n                  cb(Boom.badRequest('URI is a required param.'));\n                  return;\n                }\n\n                if (!filters.some(re => re.test(uri))) {\n                  const err = Boom.forbidden();\n                  err.output.payload = \"Error connecting to '\" + uri + \"':\\n\\nUnable to send requests to that url.\";\n                  err.output.headers['content-type'] = 'text/plain';\n                  cb(err);\n                  return;\n                }\n\n                cb(null, uri);\n              },\n              rejectUnauthorized: options.ssl.verify,\n              passThrough: true,\n              xforward: true,\n              onResponse: function (err, res, request, reply, settings, ttl) {\n                if (err != null) {\n                  reply(\"Error connecting to '\" + request.query.uri + \"':\\n\\n\" + err.message).type(\"text/plain\").statusCode = 502;\n                } else {\n                  reply(null, res);\n                }\n              }\n            }\n          }\n        }\n      });\n\n      server.route({\n        path: '/api/sense/api_server',\n        method: ['GET', 'POST'],\n        handler: function (req, reply) {\n          let server = require('./api_server/server');\n          let {sense_version, apis} = req.query;\n          if (!apis) {\n            reply(Boom.badRequest('\"apis\" is a required param.'));\n            return;\n          }\n\n          return server.resolveApi(sense_version, apis.split(\",\"), reply);\n        }\n      });\n\n      const testApp = kibana.uiExports.apps.hidden.byId['sense-tests'];\n      if (testApp) {\n        server.route({\n          path: '/app/sense-tests',\n          method: 'GET',\n          handler: function (req, reply) {\n            return reply.renderApp(testApp);\n          }\n        });\n      }\n    },\n\n    uiExports: {\n      apps: apps,\n\n      noParse: [\n        join(modules, 'ace' + sep),\n        join(modules, 'moment_src/moment' + sep),\n        join(src, 'sense_editor/mode/worker.js')\n      ]\n    }\n  })\n};\n"
      ]
    },
    "mtime": 1456527367000
  },
  "{\"filename\":\"/home/vishwarajanand/Desktop/DblpDataset/elasticsearch-2.2.0/bin/kibana-4.4.1-linux-x64/installedPlugins/sense/index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nmodule.exports = function (kibana) {\n  var _require = require('path');\n\n  var resolve = _require.resolve;\n  var join = _require.join;\n  var sep = _require.sep;\n\n  var Joi = require('joi');\n  var Boom = require('boom');\n  var modules = resolve(__dirname, 'public/webpackShims/');\n  var src = resolve(__dirname, 'public/src/');\n\n  var _require2 = require('fs');\n\n  var existsSync = _require2.existsSync;\n\n  var _require3 = require('lodash');\n\n  var startsWith = _require3.startsWith;\n  var endsWith = _require3.endsWith;\n\n  var apps = [{\n    title: 'Sense',\n    description: 'JSON aware developer\\'s interface to ElasticSearch',\n    icon: 'plugins/sense/bonsai.png',\n    main: 'plugins/sense/sense',\n    autoload: kibana.autoload.styles,\n    injectVars: function injectVars(server, options) {\n      return options;\n    }\n  }];\n\n  if (existsSync(resolve(__dirname, 'public/tests'))) {\n    apps.push({\n      title: 'Sense Tests',\n      id: 'sense-tests',\n      main: 'plugins/sense/tests',\n      hidden: true\n      //listed: false // uncomment after https://github.com/elastic/kibana/pull/4755\n    });\n  }\n\n  return new kibana.Plugin({\n    id: 'sense',\n\n    config: function config(Joi) {\n      return Joi.object({\n        enabled: Joi.boolean()['default'](true),\n        defaultServerUrl: Joi.string()['default']('http://localhost:9200'),\n        proxyFilter: Joi.array().items(Joi.string()).single()['default'](['.*']),\n        ssl: Joi.object({\n          verify: Joi.boolean()['default'](true)\n        })['default']()\n      })['default']();\n    },\n\n    init: function init(server, options) {\n      var filters = options.proxyFilter.map(function (str) {\n        return new RegExp(str);\n      });\n\n      // http://hapijs.com/api/8.8.1#route-configuration\n      server.route({\n        path: '/api/sense/proxy',\n        method: ['*', 'GET'],\n        config: {\n          handler: {\n            proxy: {\n              mapUri: function mapUri(req, cb) {\n                var uri = req.query.uri;\n\n                if (!uri) {\n                  cb(Boom.badRequest('URI is a required param.'));\n                  return;\n                }\n\n                if (!filters.some(function (re) {\n                  return re.test(uri);\n                })) {\n                  var err = Boom.forbidden();\n                  err.output.payload = \"Error connecting to '\" + uri + \"':\\n\\nUnable to send requests to that url.\";\n                  err.output.headers['content-type'] = 'text/plain';\n                  cb(err);\n                  return;\n                }\n\n                cb(null, uri);\n              },\n              rejectUnauthorized: options.ssl.verify,\n              passThrough: true,\n              xforward: true,\n              onResponse: function onResponse(err, res, request, reply, settings, ttl) {\n                if (err != null) {\n                  reply(\"Error connecting to '\" + request.query.uri + \"':\\n\\n\" + err.message).type(\"text/plain\").statusCode = 502;\n                } else {\n                  reply(null, res);\n                }\n              }\n            }\n          }\n        }\n      });\n\n      server.route({\n        path: '/api/sense/api_server',\n        method: ['GET', 'POST'],\n        handler: function handler(req, reply) {\n          var server = require('./api_server/server');\n          var _req$query = req.query;\n          var sense_version = _req$query.sense_version;\n          var apis = _req$query.apis;\n\n          if (!apis) {\n            reply(Boom.badRequest('\"apis\" is a required param.'));\n            return;\n          }\n\n          return server.resolveApi(sense_version, apis.split(\",\"), reply);\n        }\n      });\n\n      var testApp = kibana.uiExports.apps.hidden.byId['sense-tests'];\n      if (testApp) {\n        server.route({\n          path: '/app/sense-tests',\n          method: 'GET',\n          handler: function handler(req, reply) {\n            return reply.renderApp(testApp);\n          }\n        });\n      }\n    },\n\n    uiExports: {\n      apps: apps,\n\n      noParse: [join(modules, 'ace' + sep), join(modules, 'moment_src/moment' + sep), join(src, 'sense_editor/mode/worker.js')]\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/vishwarajanand/Desktop/DblpDataset/elasticsearch-2.2.0/bin/kibana-4.4.1-linux-x64/installedPlugins/sense/index.js"
      ],
      "names": [],
      "mappings": "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",
      "file": "/home/vishwarajanand/Desktop/DblpDataset/elasticsearch-2.2.0/bin/kibana-4.4.1-linux-x64/installedPlugins/sense/index.js",
      "sourcesContent": [
        "module.exports = function (kibana) {\n  let { resolve, join, sep } = require('path');\n  let Joi = require('joi');\n  let Boom = require('boom');\n  let modules = resolve(__dirname, 'public/webpackShims/');\n  let src = resolve(__dirname, 'public/src/');\n  let { existsSync } = require('fs');\n  const { startsWith, endsWith } = require('lodash');\n\n  const apps = [\n    {\n      title: 'Sense',\n      description: 'JSON aware developer\\'s interface to ElasticSearch',\n      icon: 'plugins/sense/bonsai.png',\n      main: 'plugins/sense/sense',\n      autoload: kibana.autoload.styles,\n      injectVars: function (server, options) {\n        return options;\n      }\n    }\n  ];\n\n  if (existsSync(resolve(__dirname, 'public/tests'))) {\n    apps.push({\n      title: 'Sense Tests',\n      id: 'sense-tests',\n      main: 'plugins/sense/tests',\n      hidden: true\n      //listed: false // uncomment after https://github.com/elastic/kibana/pull/4755\n    });\n  }\n\n  return new kibana.Plugin({\n    id: 'sense',\n\n    config: function (Joi) {\n      return Joi.object({\n        enabled: Joi.boolean().default(true),\n        defaultServerUrl: Joi.string().default('http://localhost:9200'),\n        proxyFilter: Joi.array().items(Joi.string()).single().default(['.*']),\n        ssl: Joi.object({\n          verify: Joi.boolean().default(true),\n        }).default(),\n      }).default();\n    },\n\n    init: function (server, options) {\n      const filters = options.proxyFilter.map(str => new RegExp(str));\n\n      // http://hapijs.com/api/8.8.1#route-configuration\n      server.route({\n        path: '/api/sense/proxy',\n        method: ['*', 'GET'],\n        config: {\n          handler: {\n            proxy: {\n              mapUri: function (req, cb) {\n                let { uri } = req.query;\n                if (!uri) {\n                  cb(Boom.badRequest('URI is a required param.'));\n                  return;\n                }\n\n                if (!filters.some(re => re.test(uri))) {\n                  const err = Boom.forbidden();\n                  err.output.payload = \"Error connecting to '\" + uri + \"':\\n\\nUnable to send requests to that url.\";\n                  err.output.headers['content-type'] = 'text/plain';\n                  cb(err);\n                  return;\n                }\n\n                cb(null, uri);\n              },\n              rejectUnauthorized: options.ssl.verify,\n              passThrough: true,\n              xforward: true,\n              onResponse: function (err, res, request, reply, settings, ttl) {\n                if (err != null) {\n                  reply(\"Error connecting to '\" + request.query.uri + \"':\\n\\n\" + err.message).type(\"text/plain\").statusCode = 502;\n                } else {\n                  reply(null, res);\n                }\n              }\n            }\n          }\n        }\n      });\n\n      server.route({\n        path: '/api/sense/api_server',\n        method: ['GET', 'POST'],\n        handler: function (req, reply) {\n          let server = require('./api_server/server');\n          let {sense_version, apis} = req.query;\n          if (!apis) {\n            reply(Boom.badRequest('\"apis\" is a required param.'));\n            return;\n          }\n\n          return server.resolveApi(sense_version, apis.split(\",\"), reply);\n        }\n      });\n\n      const testApp = kibana.uiExports.apps.hidden.byId['sense-tests'];\n      if (testApp) {\n        server.route({\n          path: '/app/sense-tests',\n          method: 'GET',\n          handler: function (req, reply) {\n            return reply.renderApp(testApp);\n          }\n        });\n      }\n    },\n\n    uiExports: {\n      apps: apps,\n\n      noParse: [\n        join(modules, 'ace' + sep),\n        join(modules, 'moment_src/moment' + sep),\n        join(src, 'sense_editor/mode/worker.js')\n      ]\n    }\n  })\n};\n"
      ]
    },
    "mtime": 1456527367000
  }
}